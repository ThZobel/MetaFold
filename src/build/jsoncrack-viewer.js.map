{"version":3,"file":"jsoncrack-viewer.js","mappings":"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","sources":["webpack://JSONCrackViewer/webpack/universalModuleDefinition","webpack://JSONCrackViewer/external umd \"React\"","webpack://JSONCrackViewer/webpack/bootstrap","webpack://JSONCrackViewer/webpack/runtime/compat get default export","webpack://JSONCrackViewer/webpack/runtime/define property getters","webpack://JSONCrackViewer/webpack/runtime/hasOwnProperty shorthand","webpack://JSONCrackViewer/webpack/runtime/make namespace object","webpack://JSONCrackViewer/./src/components/JSONCrackViewer.jsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JSONCrackViewer\"] = factory(require(\"React\"));\n\telse\n\t\troot[\"JSONCrackViewer\"] = factory(root[\"React\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__883__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__883__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// IMPROVED JSONCrackViewer.jsx - Better FallbackViewer for Template Data\n\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst JSONCrackViewer = ({ data, width = 800, height = 600, theme = 'dark' }) => {\n  // This will be implemented later when jsongraph-react works properly\n  return null;\n};\n\n// ENHANCED FallbackViewer - MetaFold Template Data Display\nconst FallbackViewer = ({ data }) => {\n  const [viewMode, setViewMode] = useState('structured'); // 'structured' or 'raw'\n  const [expandedSections, setExpandedSections] = useState(new Set());\n\n  const toggleSection = (sectionKey) => {\n    const newExpanded = new Set(expandedSections);\n    if (newExpanded.has(sectionKey)) {\n      newExpanded.delete(sectionKey);\n    } else {\n      newExpanded.add(sectionKey);\n    }\n    setExpandedSections(newExpanded);\n  };\n\n  const formatValue = (value, maxLength = 100) => {\n    if (typeof value === 'string') {\n      return value.length > maxLength ? `\"${value.substring(0, maxLength)}...\"` : `\"${value}\"`;\n    } else if (typeof value === 'object' && value !== null) {\n      if (Array.isArray(value)) {\n        return `Array[${value.length}]`;\n      } else {\n        return `Object{${Object.keys(value).length}}`;\n      }\n    }\n    return String(value);\n  };\n\n  const renderSectionContent = (value, isExpanded = false) => {\n    if (typeof value === 'object' && value !== null) {\n      if (Array.isArray(value)) {\n        return (\n          <div style={{ marginTop: '10px' }}>\n            {isExpanded ? (\n              <div style={{ background: 'rgba(0,0,0,0.2)', padding: '10px', borderRadius: '4px' }}>\n                <pre style={{ margin: 0, fontSize: '11px', color: '#e0e0e0', whiteSpace: 'pre-wrap' }}>\n                  {JSON.stringify(value, null, 2)}\n                </pre>\n              </div>\n            ) : (\n              <div style={{ color: '#9ca3af', fontSize: '12px' }}>\n                Array with {value.length} items • Click to expand\n              </div>\n            )}\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ marginTop: '10px' }}>\n            {isExpanded ? (\n              <div style={{ background: 'rgba(0,0,0,0.2)', padding: '10px', borderRadius: '4px' }}>\n                <pre style={{ margin: 0, fontSize: '11px', color: '#e0e0e0', whiteSpace: 'pre-wrap' }}>\n                  {JSON.stringify(value, null, 2)}\n                </pre>\n              </div>\n            ) : (\n              <div>\n                {Object.entries(value).slice(0, 3).map(([key, val]) => (\n                  <div key={key} style={{ \n                    display: 'flex', \n                    justifyContent: 'space-between', \n                    margin: '3px 0',\n                    fontSize: '12px'\n                  }}>\n                    <span style={{ color: '#7dd3fc', fontWeight: '500' }}>{key}:</span>\n                    <span style={{ color: '#86efac' }}>{formatValue(val, 30)}</span>\n                  </div>\n                ))}\n                {Object.keys(value).length > 3 && (\n                  <div style={{ color: '#6b7280', fontStyle: 'italic', fontSize: '11px', marginTop: '5px' }}>\n                    ... and {Object.keys(value).length - 3} more • Click to expand\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        );\n      }\n    } else {\n      return (\n        <div style={{ marginTop: '10px', color: '#86efac', fontSize: '13px' }}>\n          {formatValue(value)}\n        </div>\n      );\n    }\n  };\n\n  const getSectionIcon = (value) => {\n    if (Array.isArray(value)) return '📋';\n    if (typeof value === 'object' && value !== null) return '🗂️';\n    return '📄';\n  };\n\n  const getSectionColor = (value) => {\n    if (Array.isArray(value)) return 'rgba(59, 130, 246, 0.3)'; // Blue\n    if (typeof value === 'object' && value !== null) return 'rgba(124, 58, 237, 0.3)'; // Purple\n    return 'rgba(16, 185, 129, 0.3)'; // Green\n  };\n\n  return (\n    <div style={{ \n      height: '100%',\n      padding: '20px',\n      background: 'linear-gradient(135deg, #1e1e2e, #2a2a40)',\n      overflow: 'auto'\n    }}>\n      {/* Header */}\n      <div style={{ textAlign: 'center', marginBottom: '25px' }}>\n        <div style={{ fontSize: '48px', marginBottom: '10px' }}>📊</div>\n        <h3 style={{ color: '#a855f7', margin: '0 0 10px 0', fontSize: '24px' }}>\n          MetaFold Template Data\n        </h3>\n        <p style={{ color: '#9ca3af', margin: 0, fontSize: '14px' }}>\n          Interactive structured view of your experiment template\n        </p>\n      </div>\n\n      {/* View Mode Toggle */}\n      <div style={{ textAlign: 'center', marginBottom: '25px' }}>\n        <div style={{ display: 'inline-flex', background: 'rgba(255,255,255,0.05)', borderRadius: '8px', padding: '4px' }}>\n          <button \n            onClick={() => setViewMode('structured')}\n            style={{\n              background: viewMode === 'structured' ? 'linear-gradient(135deg, #7c3aed, #a855f7)' : 'transparent',\n              color: viewMode === 'structured' ? 'white' : '#9ca3af',\n              border: 'none',\n              padding: '8px 16px',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500',\n              transition: 'all 0.3s ease'\n            }}\n          >\n            📊 Structured View\n          </button>\n          <button \n            onClick={() => setViewMode('raw')}\n            style={{\n              background: viewMode === 'raw' ? 'linear-gradient(135deg, #7c3aed, #a855f7)' : 'transparent',\n              color: viewMode === 'raw' ? 'white' : '#9ca3af',\n              border: 'none',\n              padding: '8px 16px',\n              borderRadius: '6px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: '500',\n              transition: 'all 0.3s ease'\n            }}\n          >\n            📄 Raw JSON\n          </button>\n        </div>\n      </div>\n\n      {/* Content */}\n      {viewMode === 'raw' ? (\n        <div style={{ background: 'rgba(0,0,0,0.3)', borderRadius: '8px', padding: '20px' }}>\n          <pre style={{ \n            color: '#e0e0e0', \n            fontSize: '12px', \n            margin: 0, \n            whiteSpace: 'pre-wrap',\n            lineHeight: '1.5'\n          }}>\n            {JSON.stringify(data, null, 2)}\n          </pre>\n        </div>\n      ) : (\n        <div style={{ \n          display: 'grid', \n          gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', \n          gap: '15px' \n        }}>\n          {Object.entries(data || {}).map(([key, value]) => {\n            const isExpanded = expandedSections.has(key);\n            const icon = getSectionIcon(value);\n            const borderColor = getSectionColor(value);\n            \n            return (\n              <div \n                key={key} \n                style={{\n                  background: 'linear-gradient(135deg, rgba(124, 58, 237, 0.1), rgba(168, 85, 247, 0.05))',\n                  border: `1px solid ${borderColor}`,\n                  borderRadius: '12px',\n                  padding: '20px',\n                  transition: 'all 0.3s ease',\n                  cursor: typeof value === 'object' ? 'pointer' : 'default',\n                  position: 'relative'\n                }}\n                onClick={() => typeof value === 'object' && toggleSection(key)}\n                onMouseEnter={(e) => {\n                  if (typeof value === 'object') {\n                    e.target.style.transform = 'translateY(-2px)';\n                    e.target.style.boxShadow = `0 8px 25px ${borderColor}`;\n                  }\n                }}\n                onMouseLeave={(e) => {\n                  if (typeof value === 'object') {\n                    e.target.style.transform = 'translateY(0)';\n                    e.target.style.boxShadow = 'none';\n                  }\n                }}\n              >\n                {/* Section Header */}\n                <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '15px' }}>\n                  <div style={{\n                    width: '40px',\n                    height: '40px',\n                    background: getSectionColor(value).replace('0.3', '0.8'),\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    fontSize: '18px'\n                  }}>\n                    {icon}\n                  </div>\n                  <div style={{ flex: 1 }}>\n                    <h4 style={{ color: '#e0e0e0', margin: 0, fontSize: '16px', fontWeight: '600' }}>\n                      {key}\n                    </h4>\n                    <p style={{ color: '#9ca3af', margin: '2px 0 0 0', fontSize: '12px' }}>\n                      {Array.isArray(value) ? `Array with ${value.length} items` : \n                       typeof value === 'object' && value !== null ? `Object with ${Object.keys(value).length} properties` :\n                       typeof value}\n                    </p>\n                  </div>\n                  {typeof value === 'object' && (\n                    <div style={{ \n                      color: 'rgba(124, 58, 237, 0.6)', \n                      fontSize: '12px',\n                      transform: isExpanded ? 'rotate(90deg)' : 'rotate(0deg)',\n                      transition: 'transform 0.3s ease'\n                    }}>\n                      ▶\n                    </div>\n                  )}\n                </div>\n\n                {/* Section Content */}\n                <div style={{ \n                  maxHeight: isExpanded ? 'none' : '120px', \n                  overflow: 'hidden',\n                  transition: 'all 0.3s ease'\n                }}>\n                  {renderSectionContent(value, isExpanded)}\n                </div>\n\n                {/* Expand Hint */}\n                {typeof value === 'object' && !isExpanded && (\n                  <div style={{\n                    position: 'absolute',\n                    bottom: '15px',\n                    right: '15px',\n                    color: 'rgba(124, 58, 237, 0.6)',\n                    fontSize: '11px',\n                    fontWeight: 'bold'\n                  }}>\n                    Click to {isExpanded ? 'collapse' : 'expand'} →\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Wrapper component - always use FallbackViewer for now\nconst JSONCrackWrapper = (props) => {\n  // For now, always use the enhanced FallbackViewer\n  // Later we can add logic to try JSONGraph first\n  return <FallbackViewer {...props} />;\n};\n\n// Export both components\nexport default JSONCrackWrapper;\nexport { JSONCrackViewer, FallbackViewer };\n\n// Global export for non-module usage\nif (typeof window !== 'undefined') {\n  window.JSONCrackViewer = JSONCrackWrapper;\n}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__883__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","JSONCrackViewer","data","width","height","theme","FallbackViewer","viewMode","setViewMode","useState","expandedSections","setExpandedSections","Set","formatValue","maxLength","length","substring","Array","isArray","keys","String","getSectionColor","React","style","padding","background","overflow","textAlign","marginBottom","fontSize","color","margin","display","borderRadius","onClick","border","cursor","fontWeight","transition","whiteSpace","lineHeight","JSON","stringify","gridTemplateColumns","gap","entries","map","isExpanded","has","icon","getSectionIcon","borderColor","position","sectionKey","newExpanded","delete","add","toggleSection","onMouseEnter","e","target","transform","boxShadow","onMouseLeave","alignItems","replace","justifyContent","flex","maxHeight","renderSectionContent","marginTop","slice","val","fontStyle","bottom","right","JSONCrackWrapper","props","window"],"sourceRoot":""}